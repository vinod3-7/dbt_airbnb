
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
<<<<<<< HEAD
name: 'my_new_project'
=======
name: 'dbtlearn'
>>>>>>> 1e6898b49944cb67c3805162c6612442ce8a72e6
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
<<<<<<< HEAD
profile: 'default'
=======
profile: 'dbtlearn'
>>>>>>> 1e6898b49944cb67c3805162c6612442ce8a72e6

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
<<<<<<< HEAD
=======
asset-paths: ["assets"]
>>>>>>> 1e6898b49944cb67c3805162c6612442ce8a72e6

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

<<<<<<< HEAD
# In dbt, the default materialization for a model is a view. This means, when you run 
# dbt run or dbt build, all of your models will be built as a view in your data platform. 
# The configuration below will override this setting for models in the example folder to 
# instead be materialized as tables. Any models you add to the root of the models folder will 
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  my_new_project:
    # Applies to all files under models/example/
    example:
      +materialized: table
=======
# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  dbtlearn:
    +materialized: view
    +post-hook:
      - "GRANT SELECT ON {{ this }} TO ROLE REPORTER"
    dim:
      +materialized: table
    src:
      +materialized: ephemeral

vars:
  user_name: "YOUR_USERNAME"
>>>>>>> 1e6898b49944cb67c3805162c6612442ce8a72e6
